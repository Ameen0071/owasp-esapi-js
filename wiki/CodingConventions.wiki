#summary Coding Conventions for the OWASP ESAPI4JS Project

=Project Layout=
{{{
 + <root>
   - documentation ( Project Documentation )
   + src
     + main
       + java ( Java Build Process )
       + javascript ( ESAPI4JS Source Files )
       + resources ( Resources for the Java Build Process )
     + test
       + java ( Unit Tests for the Java Build Process )
       + javascript ( ESAPI4JS JSUnit Tests )
       + resources ( Resources for the Java Build Process Unit Tests )
}}}

=Build Information=
The ESAPI4JS Build Process is an Ant driven process which runs a Java Process that parses for through the JS source files and merges them into 'compiled' versions which are merged component files. After the merge process the Test Cases are run using JSUnit and code analysis is run with JSLint. The final stage of the build process passes the 'compiled' code through the YUI Compressor and runs the JSDoc utilities to generate the documentation.

==Build Directives==
===Module===
This directive is required in every source file. If this directive is missing the build will fail. The directive takes a Alias to a JS file defined in _/src/main/resources/Modules.properties_

Example:
{{{
// @Module(Core)
}}}

=Example Source File=
{{{
 /*
  * OWASP Enterprise Security API (ESAPI)
  *
  * This file is part of the Open Web Application Security Project (OWASP)
  * Enterprise Security API (ESAPI) project. For details, please see
  * <a href="http://www.owasp.org/index.php/ESAPI">http://www.owasp.org/index.php/ESAPI</a>.
  *
  * Copyright (c) 2008 - The OWASP Foundation
  *
  * The ESAPI is published by OWASP under the BSD license. You should read and accept the
  * LICENSE before you use, modify, and/or redistribute this software.
  */

@Module(Core)

$namespace('org.owasp.esapi.encoder');

var Encoder = {
   encode: function() {}
};

var DefaultEncoder = function() {
   // Declare private properties and methods in a _private closure.
   var _private = {
      doPrivateWork: function() {
         return "Stuff";
      },

      privateVar: "Private";
   };

   // Declare public properties and methods in a _public closure.
   var _public = {
      encode: function(s) {
         return ""; 
      }
   };

   // If the class implements any interfaces, implement them here
   _public.implement( Encoder );

   // If this is a sealed class (most ESAPI classes should be) seal it before returning
   _public.seal();

   // Return the sealed closure of the class.
   return _public;
};
}}}

=Code Style=
*1. Every file must start with the copyright notice.*
{{{
 /*
  * OWASP Enterprise Security API (ESAPI)
  *
  * This file is part of the Open Web Application Security Project (OWASP)
  * Enterprise Security API (ESAPI) project. For details, please see
  * <a href="http://www.owasp.org/index.php/ESAPI">http://www.owasp.org/index.php/ESAPI</a>.
  *
  * Copyright (c) 2008 - The OWASP Foundation
  *
  * The ESAPI is published by OWASP under the BSD license. You should read and accept the
  * LICENSE before you use, modify, and/or redistribute this software.
  */
}}}

*2. Every class must be namespaced correctly*
{{{
$namespace('org.owasp.esapi');
}}}

*3. Class definitions should be wrapped in Closures to preserve private and public scoping*

*4. Private data or methods should be wrapped in a _private closure inside the Class closure for readability*

*5. Public data or methods should be wrapped in a _public closure inside the Class closure for readability*